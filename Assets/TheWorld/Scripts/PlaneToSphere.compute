// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel PlaneToSphere

StructuredBuffer<float3> readPoints;
RWStructuredBuffer<float4> writePoints;
Texture2D<float4> DepthMap;
SamplerState samplerDepthMap;

float2 SphereToUV(float3 input)
{
    input = normalize(input);

    float lat = asin(input.y);
    float long = atan2(input.x, -input.z);
    
    const float PI = 3.141594;
    float u = (long / PI + 1) * 0.5;
    float v = lat / PI + 0.5;

    return float2(u, v);
}

[numthreads(16,1,1)]
void PlaneToSphere(uint3 id : SV_DispatchThreadID)
{
    float2 uv = SphereToUV((readPoints[id.x].xyz));
    float4 depth = DepthMap.SampleLevel(samplerDepthMap, float2(uv.x, uv.y), 0);
    writePoints[id.x] = float4(depth);
}
